<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:sec="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-3.1.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!--方法具体调用权限管理-->
      <context:component-scan base-package="com.utils"/>

       <global-method-security secured-annotations="enabled" jsr250-annotations="enabled"   pre-post-annotations="enabled">
        <protect-pointcut expression="execution(* com.utils.imageUtiles.ceshi*(..))" access="ROLE_USER"/>
    </global-method-security>



<!--权限认证管理-->
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="user" password="user" authorities="ROLE_USER"/>
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>

        <authentication-provider user-service-ref="ceshi"/>
        <authentication-provider  user-service-ref="ceshi2"/>
    </authentication-manager>



         <user-service id="ceshi">
                <user name="ceshi"  password="ceshi" authorities="ROLE_USER"/>
            </user-service>



    <jdbc-user-service id="ceshi2" data-source-ref="datasource"
                       users-by-username-query="SELECT  username,password,enabled  FROM USERS WHERE  username=?"
                       authorities-by-username-query="SELECT  username,authority  FROM  authorities WHERE  username =?"
                       role-prefix="ROLE_"
            />


          <http security="none" pattern="/none/**"></http>
          <http security="none" pattern="/captcha.jpg"></http>
    <http auto-config="true" use-expressions="true" >
        <!--自定义主页-->
        <form-login
                             login-page="/test/login.do"
                             login-processing-url="/test/login"
                                username-parameter="username" password-parameter="password"
                             authentication-failure-url="/test/login_failure"
                             authentication-success-handler-ref="authSuccess"

                />
        <!--这个功能有毒 remember me-->
            <remember-me key="Test100862"     data-source-ref="datasource" user-service-ref="userDetailServer"/>

             <!--session管理 很多攻击都是通过Session完成的-->
        <!--检测 session 超时 invalid-session-url 指定使用已经超时的 sessionId 进行请求需要重定向的页面-->
           <session-management invalid-session-url="/none/fail2" session-authentication-error-url="/none/fail"
                    session-fixation-protection="migrateSession">
                <concurrency-control max-sessions="2" error-if-maximum-exceeded="true" expired-url="/test/logout.do"/>
           </session-management>

        <!--退出页面指定需要小心-->
        <logout logout-url="/test/logout.do" invalidate-session="true" />
        <!--必须启动匿名认证才能用  不然会出现我也不懂为什么的错误-->
        <anonymous enabled="true" granted-authority="ROLE_ANONYMOUS"/>
        <intercept-url pattern="/test/logout.do" access="hasRole('ROLE_ANONYMOUS')"/>
        <intercept-url pattern="/test/login"
                                access="hasRole('ROLE_ANONYMOUS')"   />
        <intercept-url pattern="/test/login.do" access="hasRole('ROLE_ANONYMOUS')"  />
        <intercept-url pattern="/test/login_failure" access="hasRole('ROLE_ANONYMOUS')"  />
        <intercept-url pattern="/test/login_sucesss2" access="hasIpAddress('127.0.0.1')"  />
        <intercept-url pattern="/test/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    </http>





    <!--remember-me功能使用的配置Bean-->
    <beans:bean id="userDetailServer" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="datasource"/>
    </beans:bean>

        <!--指定登录后的页面-->
    <beans:bean id="authSuccess" class="com.securityController.AuthenticationSuccessHandlerImpl"/>

      <beans:import resource="applicationcontext.xml"/>

</beans:beans>
